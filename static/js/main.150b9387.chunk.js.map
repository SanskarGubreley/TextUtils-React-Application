{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","typ","role","word","ne","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","color","backgroundColor","_useState4","myStyle","setMyStyle","Fragment","style","heading","value","onChange","event","console","log","target","rows","onClick","newText","showAlert","i","length","document","body","num","split","numWords","App","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.150b9387.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        let ne = word.toLowerCase();\r\n        return ne.charAt(0).toUpperCase()+ne.slice(1);\r\n\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.typ)}</strong>:{props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n    \r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: Proptypes.string\r\n}","import React, { useState } from \"react\";\r\n// import Alert from \"./Alert\";\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const [myStyle, setMyStyle] = useState({\r\n        color :'black',\r\n        backgroundColor :'white'\r\n    });\r\n    let handleOnChange = (event) => {\r\n        console.log(\"you entered in text area\")\r\n        setText(event.target.value);\r\n    }\r\n    let handleUpclick =()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case\" , \"success\");\r\n    }\r\n    let handleLoclick =()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lower case\" , \"success\");\r\n    }\r\n    let handleCLearclick =()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text is cleared\" , \"success\");\r\n    }\r\n    let numWords =(text)=>{\r\n        if(text.length===0){\r\n            return 0;\r\n        }else{\r\n            let num = 0;\r\n            for(var i=0;i<text.split(\" \").length;i++){\r\n                num+=1;\r\n            }\r\n            return num;\r\n        }\r\n    }\r\n    let handleDupclick =()=>{\r\n        let newText = \"\";\r\n        for(var i =0;i<text.length;i++){\r\n            if(text[i]===text[i+1]){\r\n                continue;\r\n            }else{\r\n                newText+=text[i];\r\n            }\r\n        }\r\n        setText(newText);\r\n        props.showAlert(\"Duplicates removed yayy!!\" , \"success\");\r\n    }\r\n   \r\n    let darkMode = ()=>{\r\n        if(myStyle.color === 'black'){\r\n            let newStyle = {\r\n                color :'white',\r\n                backgroundColor :'black'\r\n            }\r\n            setMyStyle(newStyle);\r\n            document.body.style.backgroundColor ='black';\r\n            props.showAlert(\"Dark mode has been enabled\" , \"success\");\r\n        }\r\n        else{\r\n            let newStyle = {\r\n                color :'black',\r\n                backgroundColor :'white'\r\n            }\r\n            setMyStyle(newStyle);\r\n            document.body.style.backgroundColor ='white';\r\n            props.showAlert(\"Light mode has been enabled\" , \"success\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={myStyle}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"my-3\">\r\n                <textarea className=\"form-control\" style={myStyle} value={text} onChange={handleOnChange} id=\"myText\" rows=\"5\"></textarea>\r\n            <button className=\"btn btn-dark my-3 mx-2\" onClick={handleUpclick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-dark my-3 mx-2\" onClick={handleLoclick}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-dark my-3 mx-2\" onClick={handleCLearclick}>Clear Text</button>\r\n            <button className=\"btn btn-dark my-3 mx-2\" onClick={handleDupclick}>Remove Duplicates</button>\r\n            <button className=\"btn btn-dark my-3 mx-2\" onClick={darkMode} >Change Theme</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container my-3\" style={myStyle}>\r\n            <h2>Your text summary</h2>\r\n            <p id=\"firstId\">{numWords(text)} Words {text.length} Characters  </p>\r\n            <p>This para will takes {0.008 * text.split(\" \").length}sec to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter text in above box to preview it here!\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './Components/About';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type\n    },\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500)\n    )\n  }\n  \n\n\n  return (\n    <>\n    {/* <Router> */}\n\n      <Navbar title=\"TextUtils\" />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={}/>\n        </Routes>\n      \n    {/* </Router> */}\n    <TextForm showAlert={showAlert} heading=\"Enter your text below to analyze\" />\n  </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}